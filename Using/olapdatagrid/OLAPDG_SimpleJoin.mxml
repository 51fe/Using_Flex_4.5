<?xml version="1.0"?>
<!-- olapdatagrid/OLAPDG_SimpleJoin.mxml -->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:mx="library://ns.adobe.com/flex/mx" 
    xmlns:s="library://ns.adobe.com/flex/spark"
        creationComplete="creationCompleteHandler();">

<fx:Script>
    <![CDATA[
        import mx.rpc.AsyncResponder;
        import mx.rpc.AsyncToken;
        import mx.rpc.events.FaultEvent;
        import mx.olap.OLAPQuery;
        import mx.olap.OLAPSet;
        import mx.olap.IOLAPQuery;
        import mx.olap.IOLAPQueryAxis;
        import mx.olap.IOLAPCube;
        import mx.olap.OLAPResult;
        import mx.events.CubeEvent;
        import mx.controls.Alert;
        import mx.collections.ArrayCollection;
        
        include "dataSimple.as"

        private function creationCompleteHandler():void {
            myMXMLCube.refresh();
        }

        private function getQuery(cube:IOLAPCube):IOLAPQuery {
            var query:OLAPQuery = new OLAPQuery;
            
            var rowQueryAxis:IOLAPQueryAxis = query.getAxis(OLAPQuery.ROW_AXIS);
            var productSet:OLAPSet = new OLAPSet;
            productSet.addElements(cube.findDimension("ProductDim").findAttribute("Product").children);
            rowQueryAxis.addSet(productSet);
            
            var colQueryAxis:IOLAPQueryAxis = query.getAxis(OLAPQuery.COLUMN_AXIS);         
            var yearSet:OLAPSet= new OLAPSet;
            yearSet.addElements(cube.findDimension("TimeDim").findAttribute("Year").children);
            var quarterSet:OLAPSet= new OLAPSet;
            quarterSet.addElements(cube.findDimension("TimeDim").findAttribute("Quarter").children);
            colQueryAxis.addSet(yearSet.crossJoin(quarterSet));
            
            return query;       
        }

        private function runQuery(event:CubeEvent):void {
            var cube:IOLAPCube = IOLAPCube(event.currentTarget);
            var query:IOLAPQuery = getQuery(cube);
            var token:AsyncToken = cube.execute(query);
            token.addResponder(new AsyncResponder(showResult, showFault));
        }
        
        private function showFault(error:FaultEvent, token:Object):void {
            Alert.show(error.fault.faultString);
        }

        private function showResult(result:Object, token:Object):void {
            if (!result) {
                Alert.show("No results from query.");
                return;
            }
            myOLAPDG.dataProvider= result as OLAPResult;            
        }
        
    ]]>
</fx:Script>

    <fx:Declarations>
        <mx:OLAPCube name="FlatSchemaCube" 
            dataProvider="{flatData}" 
            id="myMXMLCube"
            complete="runQuery(event);">
     
            <mx:OLAPDimension name="CustomerDim">
                <mx:OLAPAttribute name="Customer" dataField="customer"/>
                <mx:OLAPHierarchy name="CustomerHier" 
                    hasAll="true">
                    <mx:OLAPLevel attributeName="Customer"/>
                </mx:OLAPHierarchy>
            </mx:OLAPDimension>
    
            <mx:OLAPDimension name="ProductDim">
                <mx:OLAPAttribute name="Product" dataField="product"/>
                <mx:OLAPHierarchy name="ProductHier" 
                    hasAll="true">
                    <mx:OLAPLevel attributeName="Product"/>
                </mx:OLAPHierarchy>
            </mx:OLAPDimension>

            <mx:OLAPDimension name="TimeDim">
                <mx:OLAPAttribute name="Year" dataField="year"/>
                <mx:OLAPAttribute name="Quarter" dataField="quarter"/>
                <mx:OLAPHierarchy name="Time-PeriodHier" 
                    hasAll="true">
                    <mx:OLAPLevel attributeName="Year"/>
                    <mx:OLAPLevel attributeName="Quarter"/>
                </mx:OLAPHierarchy> 
            </mx:OLAPDimension>

            <mx:OLAPMeasure name="Revenue" 
                dataField="revenue" 
                aggregator="SUM"/>
        </mx:OLAPCube>
    </fx:Declarations>

    <mx:OLAPDataGrid id="myOLAPDG" width="100%" height="100%" />
</s:Application>